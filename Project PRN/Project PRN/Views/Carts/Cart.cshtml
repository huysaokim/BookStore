
@{
    ViewBag.Title = "Cart";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section scripts{
    <script src="~/Scripts/axios.js"></script>

    <script>
        var app1 = new Vue({
            el: '#carts',
            data: {
                carts: [],
            },
            mounted: function () {
                axios.get('/Carts/CartJson')
                    .then(response => {
                        this.carts = response.data;
                        console.log(this.carts);
                    })
                    .catch(error => {
                        console.log(error);
                    })
            },
            computed: {
                calTotal: function () {
                    let total = 0
                    for (let c of this.carts) {
                        total += c.Product.price * c.quantity
                    }
                    return total;
                },
            },
            methods: {
                loadCart() {
                    axios.get('/Carts/CartJson')
                        .then(response => {
                            this.carts = response.data;
                            console.log(this.carts);
                        })
                        .catch(error => {
                            console.log(error);
                        })
                },
                calTotalForSingleProduct: function (cart) {
                    return cart.Product.price * cart.quantity;
                },
                removeProductAtCart(cartId, productId) {
                    axios.get('/Carts/RemoveProductAtCart', {
                        params: {
                            cartId: cartId,
                            productID: productId
                        }
                    })
                        .then(response => {
                            this.carts = response.data
                            this.loadCart()
                        })
                        .catch(error => {
                            console.log(error);
                        })
                },
                changeQuantity(cartId, productId, quantity) {
                    axios.get('/Carts/ChangeQuantityAtCart', {
                        params: {
                            cartId: cartId,
                            productID: productId,
                            quantity: quantity
                        }
                    })
                        .then(response => {
                            this.carts = response.data
                            this.loadCart()
                        })
                        .catch(error => {
                            console.log(error);
                        })
                },
                formattedCurrencyValue(totalValue) {
                    if (!totalValue) { return "$0.00" }
                    return "$" + parseFloat(totalValue).toFixed(2)
                }
            }
        })
    </script>
}

<div class="hero-wrap hero-bread" style="background-image: url('/Content/Design Images/bg_6.jpg');">
    <div class="container">
        <div class="row no-gutters slider-text align-items-center justify-content-center">
            <div class="col-md-9 ftco-animate text-center">
                <h1 class="mb-0 bread">Shopping Cart</h1>
            </div>
        </div>
    </div>
</div>

<section class="ftco-section ftco-cart">
    <div id="carts" class="container">
        <div class="row">
            <div class="col-md-12">
                <div class="cart-list">
                    <table class="table">
                        <thead class="thead-primary">
                            <tr class="text-center">
                                <th>&nbsp;</th>
                                <th>&nbsp;</th>
                                <th>Product</th>
                                <th>Price</th>
                                <th>Quantity</th>
                                <th>Total</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr v-for="p in carts" class="text-center">
                                <td class="product-remove"><a v-on:click="removeProductAtCart(p.cartid, p.Product.productID)" class="btn btn-danger"><span class="ion-ios-close"></span></a></td>

                                <td class="image-prod">
                                    <a v-bind:href="'/Products/ProductDetail?productID=' + p.Product.productID">
                                        <img class="img" v-bind:src="p.Product.image" />
                                    </a>
                                </td>

                                <td class="product-name">
                                    <h3>
                                        <a v-bind:href="'/Products/ProductDetail?productID=' + p.Product.productID">
                                            {{p.Product.title}}
                                        </a>
                                    </h3>
                                </td>

                                <td class="price">${{p.Product.price}}</td>

                                <td class="quantity">
                                    <div class="input-group mb-3">
                                        <span class="input-group-btn mr-2">
                                            <button type="button" class="quantity-left-minus btn btn-primary" data-type="minus" v-on:click="changeQuantity(p.cartid, p.Product.productID, -1)"
                                                    data-field="">
                                                <i class="ion-ios-remove"></i>
                                            </button>
                                        </span>
                                        <input type="text" id="quantity" name="quantity"
                                               class="quantity form-control input-number" v-bind:value="p.quantity" min="1" v-bind:max="p.Product.quantity">
                                        <span class="input-group-btn ml-2">
                                            <button type="button" class="quantity-right-plus btn" data-type="plus" v-on:click="changeQuantity(p.cartid, p.Product.productID, 1)"
                                                    data-field="">
                                                <i class="ion-ios-add"></i>
                                            </button>
                                        </span>
                                    </div>
                                </td>

                                <td class="total">{{formattedCurrencyValue(calTotalForSingleProduct(p))}}</td>
                            </tr><!-- END TR-->

                        </tbody>
                    </table>
                </div>
            </div>
        </div>
        <div class="row justify-content-start">
            <div class="col col-lg-5 col-md-6 mt-5 cart-wrap">
                <div class="cart-total mb-3">
                    <h3>Cart Totals</h3>
                    <p class="d-flex">
                        <span>Subtotal</span>
                        <span>{{formattedCurrencyValue(calTotal)}}</span>
                    </p>
                    <p class="d-flex">
                        <span>Delivery</span>
                        <span>$0.00</span>
                    </p>
                    <p class="d-flex">
                        <span>Discount</span>
                        <span>$0.00</span>
                    </p>
                    <hr>
                    <p class="d-flex total-price">
                        <span>Total</span>
                        <span>{{formattedCurrencyValue(calTotal)}}</span>
                    </p>
                </div>
                <p class="text-center"><a href="/Bills/CheckOut" class="btn btn-primary py-3 px-4">Proceed to Checkout</a></p>
            </div>
        </div>
    </div>
</section>
